user www-data;

worker_processes auto;

events {
  worker_connections 1024;
}

http {

  include mime.types;
  
  # Declaring upstream variable for load balancing  
  upstream php_servers {
	# For sticky sessions, call first when its possible
	# ip_hash;
	# For true load balance, call server with less load
	# least_conn;
	server localhost:10001;
	server localhost:10002;
	server localhost:10003;
  }

  # Hiding nginx version from the headers
  server_tokens off;

  # Redirect all traffic to HTTPS
  server {
    listen 80;
    server_name 192.168.56.101;
    return 301 https://$host$request_uri;
  }

  server {

    listen 443 ssl http2;
    server_name 192.168.56.101;

    root /home/manuel/sites/demo;

    index index.html;

    # Avoiding clic jacking and cross-origin scripting
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";

    ssl_certificate /etc/nginx/ssl/self.crt;
    ssl_certificate_key /etc/nginx/ssl/self.key;

    # Disable SSL
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    # Optimise cipher suits
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

    # Enable DH Params
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    # Enable HSTS
    add_header Strict-Transport-Security "max-age=31536000" always;

    # SSL sessions
    ssl_session_cache shared:SSL:40m;
    ssl_session_timeout 4h;
    ssl_session_tickets on;

    location / {
      try_files $uri $uri/ =404;
    }

    location ~\.php$ {
      # Pass php requests to the php-fpm service (fastcgi)
      include fastcgi.conf;
      fastcgi_pass unix:/run/php/php7.1-fpm.sock;
    }

    # NGINX acting like a reverse proxy
    location /php {
	proxy_set_header proxied nginx;
	proxy_pass 'http://localhost:9999/';
    }
   
    # NGINX load balancing
    location /balancing {
	proxy_pass http://php_servers;
    }
  }
}
